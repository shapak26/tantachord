{"version":3,"sources":["logo.svg","Youtube.js","playChord.js","formChord.js","AddChord.js","App.js","reportWebVitals.js","index.js"],"names":["React","Component","Chord","useState","videoTime","setVideoTime","chordId","setChordId","chord","setChord","player","setPlayer","song","time","useEffect","length","window","responsiveVoice","speak","rate","volume","console","log","className","id","onClick","pauseVideo","seekTo","handleSeek","videoId","opts","height","width","playerVars","autoplay","controls","onReady","event","target","document","getElementById","addEventListener","playVideo","setVolume","onPlay","videotime","getCurrentTime","setInterval","onPause","onStateChange","src","Form","props","chordLists","setChordList","onSubmit","preventDefault","map","chordList","index","for","type","name","value","onChange","values","handleChordChange","step","parseFloat","handleTimeChange","splice","handleRemoveChord","AddChord","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0f336b85.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport YouTube from 'react-youtube';\r\n\r\nclass Example extends React.Component {\r\n    render() {\r\n        const opts = {\r\n            height: '390',\r\n            width: '640',\r\n            playerVars: {\r\n                // https://developers.google.com/youtube/player_parameters\r\n                autoplay: 1,\r\n            },\r\n        };\r\n\r\n        return <YouTube videoId=\"2g811Eo7K8U\" opts={opts} onReady={this.whereMyevent} onPlay={this.play} onPause={this.pause} onStateChange={this.stamp} />;\r\n    }\r\n\r\n    whereMyevent(event) {\r\n        // access to player in all event handlers via event.target\r\n\r\n\r\n        console.log(event.target)\r\n        console.log(event.target.getCurrentTime())\r\n    }\r\n\r\n    pause(event) {\r\n        console.log(12)\r\n        console.log(event.target)\r\n    }\r\n\r\n    play(event) {\r\n        console.log(11)\r\n        setInterval(console.log(event.target.getCurrentTime()), 100);\r\n\r\n\r\n    }\r\n\r\n    stamp(event) {\r\n        console.log(event.target.getCurrentTime())\r\n    }\r\n}\r\n\r\nexport default Example","import YouTube from 'react-youtube';\r\nimport { useState, useEffect } from \"react\"\r\n\r\nfunction Chord() {\r\n\r\n\r\n    const [videoTime, setVideoTime] = useState(0)\r\n    const [chordId, setChordId] = useState(0)\r\n    const [chord, setChord] = useState(\"เริ่มเล่นคอร์ด\")\r\n    const [player, setPlayer] = useState(null)\r\n\r\n\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay: 0,\r\n            controls: 0\r\n        },\r\n    };\r\n\r\n\r\n\r\n\r\n    const song = [\r\n\r\n        {\r\n            time: 1.5,\r\n            chord: \"A\"\r\n\r\n        },\r\n        {\r\n            time: 6,\r\n            chord: \"F Sharp minor\"\r\n        },\r\n        {\r\n            time: 11.6,\r\n            chord: \"D\"\r\n        },\r\n        {\r\n            time: 16.9,\r\n            chord: \"E\"\r\n        },\r\n        {\r\n            time: 22,\r\n            chord: \"A\"\r\n        },\r\n        {\r\n            time: 27,\r\n            chord: \"F Sharp minor\"\r\n        },\r\n        {\r\n            time: 32.2,\r\n            chord: \"D\"\r\n        },\r\n        {\r\n            time: 37.3,\r\n            chord: \"E\"\r\n        },\r\n        {\r\n            time: 42.4,\r\n            chord: \"A\"\r\n        },\r\n        {\r\n            time: 45.0,\r\n            chord: \"A major seven\"\r\n        },\r\n        {\r\n            time: 47.5,\r\n            chord: \"A seven\"\r\n        },\r\n        {\r\n            time: 50.0,\r\n            chord: \"D\"\r\n        },\r\n        {\r\n            time: 52.75,\r\n            chord: \"A\"\r\n        }\r\n\r\n    ]\r\n\r\n    function handleSeek(player) {\r\n\r\n        player.pauseVideo()\r\n\r\n\r\n        if (chordId <= 1) {\r\n\r\n            setChord(\"เริ่ม\")\r\n\r\n\r\n\r\n\r\n        } else {\r\n            setChordId(chordId - 1)\r\n            setChord(song[chordId - 2].chord)\r\n\r\n            player.seekTo(song[chordId - 2].time - 0.1, true)\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    function readyToPlay(event) {\r\n\r\n\r\n        setPlayer(event.target)\r\n        let player = event.target\r\n\r\n        let playButton = document.getElementById(\"play-button\");\r\n        playButton.addEventListener(\"click\", function () {\r\n            player.playVideo();\r\n\r\n        })\r\n\r\n\r\n        let pauseButton = document.getElementById(\"pause-button\");\r\n        pauseButton.addEventListener(\"click\", function () {\r\n            player.pauseVideo();\r\n        })\r\n\r\n        // let previousChordButton = document.getElementById(\"seek-button\");\r\n        // previousChordButton.addEventListener(\"click\", function () {\r\n\r\n        //     setChordId(chordId + 1)\r\n        //     setChord(song[chordId].chord)\r\n\r\n        //     player.seekTo(song[chordId].time - 0.1, true);\r\n\r\n        //     console.log(chordId)\r\n        // })\r\n\r\n\r\n\r\n\r\n        event.target.setVolume(40)\r\n\r\n\r\n    }\r\n\r\n    //run เมื่อหยุดเล่น\r\n    function pause(event) {\r\n\r\n    }\r\n\r\n\r\n    //run เมื่อมีการเล่น\r\n    function play(event) {\r\n\r\n        let player = event.target\r\n        let videotime = event.target.getCurrentTime()\r\n        // let timeInterval\r\n        function updateTime() {\r\n            // let oldTime = videotime;\r\n            if (player && player.getCurrentTime) {\r\n                videotime = player.getCurrentTime();\r\n\r\n                // console.log(videotime);\r\n                setVideoTime(videotime)\r\n                setPlayer(player)\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        setInterval(updateTime, 100);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // call เมื่อ state videoTime เปลี่ยน\r\n\r\n    useEffect(() => {\r\n\r\n        if (chordId < song.length) {\r\n\r\n            if (song[chordId].time < videoTime + 0.1 && song[chordId].time > videoTime - 0.1) {\r\n\r\n                setChord(song[chordId].chord)\r\n\r\n                setChordId(chordId + 1)\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n    }, [videoTime])\r\n\r\n    //function สำหรับอ่านเสียง\r\n    function say(m) {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        var voices = window.speechSynthesis.getVoices();\r\n        msg.voice = voices[46];\r\n        msg.voiceURI = \"native\";\r\n        msg.volume = 1;\r\n        msg.rate = 0.7;\r\n        msg.pitch = 0.8;\r\n        msg.text = m;\r\n        msg.lang = 'th-TH';\r\n        speechSynthesis.speak(msg);\r\n    }\r\n\r\n    // call เมื่อ state chord เปลี่ยน\r\n    useEffect(() => {\r\n\r\n        window.responsiveVoice.speak(chord, \"Thai Male\", { rate: 1.1, volume: 1 });\r\n\r\n    }, [chord])\r\n\r\n\r\n\r\n\r\n\r\n    function onStateChange(event) {\r\n        console.log(event.target.getCurrentTime())\r\n\r\n    }\r\n\r\n    console.log(\"chordID \" + chordId)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{videoTime}</h1>\r\n            <h1>{chord}</h1>\r\n            <h1>{chordId}</h1>\r\n            <div className=\"player-button\">\r\n                <button id=\"play-button\" >Play Me</button>\r\n                <button id=\"pause-button\" >Pause Me</button>\r\n                <button id=\"seek-button\" onClick={() => {\r\n                    handleSeek(player)\r\n                }}>คอร์ดก่อนหน้า</button>\r\n            </div>\r\n\r\n            <YouTube videoId=\"Bn5JCe-7aIg\" opts={opts} onReady={readyToPlay} onPlay={play} onPause={pause} onStateChange={onStateChange} />\r\n            <script src=\"https://code.responsivevoice.org/responsivevoice.js?key=bJ1UATjQ\"></script>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Chord","import { useState } from 'react'\r\n\r\nfunction Form(props) {\r\n\r\n    const { chordLists, setChordList } = props\r\n\r\n    function handleChordChange(index, event) {\r\n\r\n        let values = [...chordLists]\r\n        values[index][event.target.name] = event.target.value\r\n        setChordList(values)\r\n\r\n    }\r\n\r\n    function handleTimeChange(index, event) {\r\n\r\n        let values = [...chordLists]\r\n        values[index][event.target.name] = parseFloat(event.target.value)\r\n        setChordList(values)\r\n\r\n    }\r\n\r\n    function handlePlusButton() {\r\n\r\n        setChordList([...chordLists, {\r\n            time: 0,\r\n            chord: ''\r\n        }])\r\n    }\r\n\r\n    function handleRemoveChord(index) {\r\n\r\n        let values = [...chordLists]\r\n        values.splice(index, 1)\r\n\r\n        setChordList(values)\r\n\r\n\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        console.log(chordLists)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                {\r\n                    chordLists.map((chordList, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <label for=\"chord\">คอร์ด</label>\r\n                                <input type=\"text\" name=\"chord\" id=\"chord\" value={chordList.chord} onChange={(event => {\r\n                                    handleChordChange(index, event)\r\n                                })} />\r\n                                <label for=\"time\">เวลา</label>\r\n                                <input type=\"number\" name=\"time\" id=\"time\" step=\"0.01\" value={chordList.time} onChange={(event => {\r\n                                    handleTimeChange(index, event)\r\n                                })} />\r\n                                <button onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    handlePlusButton()\r\n                                }}>เพิ่ม</button>\r\n                                <button onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    handleRemoveChord(index)\r\n                                }} >ลบ</button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import YouTube from 'react-youtube';\r\nimport { useState, useEffect } from \"react\"\r\nimport Form from './formChord'\r\n\r\nfunction AddChord() {\r\n\r\n\r\n    const [videoTime, setVideoTime] = useState(0)\r\n    const [chordId, setChordId] = useState(0)\r\n    const [chord, setChord] = useState(\"เริ่มเล่นคอร์ด\")\r\n    const [player, setPlayer] = useState(null)\r\n    const [song2, setSong] = useState([])\r\n\r\n\r\n    const [chordLists, setChordList] = useState([\r\n        {\r\n            time: \"\",\r\n            chord: \"\"\r\n        },\r\n        {\r\n            time: \"\",\r\n            chord: \"\"\r\n        }\r\n    ]\r\n\r\n    )\r\n\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay: 0,\r\n            controls: 0\r\n        },\r\n    };\r\n\r\n\r\n\r\n\r\n    const song = chordLists\r\n    function handleSeek(player) {\r\n\r\n        player.pauseVideo()\r\n\r\n\r\n        if (chordId <= 1) {\r\n\r\n            setChord(\"เริ่ม\")\r\n\r\n\r\n\r\n\r\n        } else {\r\n            setChordId(chordId - 1)\r\n            setChord(song[chordId - 2].chord)\r\n\r\n            player.seekTo(song[chordId - 2].time - 0.1, true)\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    function readyToPlay(event) {\r\n\r\n\r\n        setPlayer(event.target)\r\n        let player = event.target\r\n\r\n        let playButton = document.getElementById(\"play-button\");\r\n        playButton.addEventListener(\"click\", function () {\r\n            player.playVideo();\r\n\r\n        })\r\n\r\n\r\n        let pauseButton = document.getElementById(\"pause-button\");\r\n        pauseButton.addEventListener(\"click\", function () {\r\n            player.pauseVideo();\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n        event.target.setVolume(40)\r\n\r\n\r\n    }\r\n\r\n    //run เมื่อหยุดเล่น\r\n    function pause(event) {\r\n\r\n    }\r\n\r\n\r\n    //run เมื่อมีการเล่น\r\n    function play(event) {\r\n\r\n        let player = event.target\r\n        let videotime = event.target.getCurrentTime()\r\n        // let timeInterval\r\n        function updateTime() {\r\n            // let oldTime = videotime;\r\n            if (player && player.getCurrentTime) {\r\n                videotime = player.getCurrentTime();\r\n\r\n                // console.log(videotime);\r\n                setVideoTime(videotime)\r\n                setPlayer(player)\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        setInterval(updateTime, 100);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // call เมื่อ state videoTime เปลี่ยน\r\n\r\n    useEffect(() => {\r\n\r\n        if (chordId < song.length) {\r\n\r\n            if (song[chordId].time < videoTime + 0.1 && song[chordId].time > videoTime - 0.1) {\r\n\r\n                setChord(song[chordId].chord)\r\n\r\n                setChordId(chordId + 1)\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n    }, [videoTime])\r\n\r\n    //function สำหรับอ่านเสียง\r\n    function say(m) {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        var voices = window.speechSynthesis.getVoices();\r\n        msg.voice = voices[46];\r\n        msg.voiceURI = \"native\";\r\n        msg.volume = 1;\r\n        msg.rate = 0.7;\r\n        msg.pitch = 0.8;\r\n        msg.text = m;\r\n        msg.lang = 'th-TH';\r\n        speechSynthesis.speak(msg);\r\n    }\r\n\r\n    // call เมื่อ state chord เปลี่ยน\r\n    useEffect(() => {\r\n\r\n        window.responsiveVoice.speak(chord, \"Thai Male\", { rate: 1.1, volume: 1 });\r\n\r\n    }, [chord])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{videoTime}</h1>\r\n            <h1>{chord}</h1>\r\n            <h1>{chordId}</h1>\r\n            <div className=\"player-button\">\r\n                <button id=\"play-button\" >Play Me</button>\r\n                <button id=\"pause-button\" >Pause Me</button>\r\n                <button id=\"seek-button\" onClick={() => {\r\n                    handleSeek(player)\r\n                }}>คอร์ดก่อนหน้า</button>\r\n            </div>\r\n\r\n\r\n\r\n            <YouTube videoId=\"Bn5JCe-7aIg\" opts={opts} onReady={readyToPlay} onPlay={play} onPause={pause} />\r\n            <Form chordLists={chordLists} setChordList={setChordList} />\r\n            <script src=\"https://code.responsivevoice.org/responsivevoice.js?key=bJ1UATjQ\"></script>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AddChord","import logo from './logo.svg';\nimport './App.css';\nimport YouTube from 'react-youtube'\nimport Example from './Youtube.js'\nimport Chord from './playChord.js'\nimport AddChord from './AddChord.js'\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useParams,\n  HashRouter\n} from 'react-router-dom'\n\n\nimport Form from './formChord'\n\nfunction App() {\n\n\n  return (\n    <div>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/chord\" component={Chord} />\n          <Route path=\"/add-chord\" component={AddChord} />\n          <Route path=\"/form\" component={Form} />\n\n\n        </Switch>\n      </HashRouter>\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}